#!/bin/sh
#
# Runtime configuration...
#

if is_plugin_enabled "fw_" ; then
  remove_plugin "fw_"
  count=0
  for v in "" "6"
  do
    for TABLE in $(ip${v}tables -v -x -L | grep _counter | grep '^Chain' | cut -d' ' -f2)
    do
      count=$(expr $count + 1)
      add_plugin "fw${v}_$count"
      eval "fetch_fw${v}_${count}() { fetch_fw '$v' $TABLE \$@; };"
      eval "config_fw${v}_${count}() { config_fw '$v' $TABLE \$@; };"
    done
  done
fi
#    | tr -sc A-Za-z0-9 _)

fw_nicname() {
  case "$1" in
  eth1) echo "ADM,$1" ;;
  eth2) echo "WAN4,$1" ;;
  eth3) echo "DMZ,$1" ;;
  eth4) echo "HOME,$1" ;;
  eth5) echo "TRUSTED,$1" ;;
  eth6) echo "CCTV,$1" ;;
  xtun0) echo "WAN6,$1" ;;
  *)
    echo "$1"
  esac
}

config_fw() {
  cat <<-_EOF_
	graph_title	IP$1 Firewall $2
	graph_args	--base 1000
	graph_vlabel	pkts/sec
	graph_category	firewall
	graph_info	This graphs shows IP$1 Firewall counters for the target $2.
	_EOF_
  ip${1}tables -v -x -L $2 | while read pkts bytes target prot opt inp out rest
  do
    [ -z "$inp" ] && continue
    [ x"$pkts" = x"pkts" ] && continue
    [ "$pkts" -eq 0 ] && continue 	# Do not configure zero counts...
    if [ $inp != any ] ; then
      nic=$inp
      dir="recv"
    else
      nic=$out
      dir="send"
    fi
    var="n${nic}_${prot}$1"
    cat <<-_EOF_
	$var.label ${target}ed $dir ($(fw_nicname $nic),$prot)
	$var.type DERIVE
	$var.min 0
	_EOF_
  done
}
      
fetch_fw() {
  ip${1}tables -v -x -L $2 | while read pkts bytes target prot opt inp out rest
  do
    [ -z "$inp" ] && continue
    [ x"$pkts" = x"pkts" ] && continue
    [ "$pkts" -eq 0 ] && continue 	# Do not configure zero counts...
    if [ $inp != any ] ; then
      nic=$inp
    else
      nic=$out
    fi
    var="n${nic}_${prot}$1"
    echo "$var.value $pkts"
  done
}  
